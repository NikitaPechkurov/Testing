@startuml

title __MODEL's Class Diagram__\n

  namespace model {
    abstract class model.Colleague {
        + Colleague()
        + getReceivedMessage()
        {abstract} + notifyColleague()
        + receive()
    }
  }
  

  namespace model {
    class model.Editor {
        + Editor()
        + notifyColleague()
    }
  }
  

  namespace model {
    interface model.Mediator {
        {abstract} + setView()
    }
  }
  

  namespace model {
    class model.Question {
        ~ answergood : ArrayList<StringProperty>
        ~ badanswer : ArrayList<StringProperty>
        ~ question : StringProperty
        ~ type : Integer
        + Question()
        + addFalse()
        + addTrue()
        + getBadAnswer()
        + getGoodAnswer()
        + getQuestionProperty()
        + getTest()
        + setQuestion()
    }
  }
  

  namespace model {
    class model.Viewer {
        + Viewer()
        + notifyColleague()
    }
  }
  

  namespace model {
    class model.Worker {
        + Worker()
        + notifyColleague()
    }
  }
  

  model.Colleague o-- model.Mediator : mediator
  model.Colleague o-- model.Question : receivedMessage
  model.Editor -up-|> model.Colleague
  model.Viewer -up-|> model.Colleague
  model.Worker -up-|> model.Colleague


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
